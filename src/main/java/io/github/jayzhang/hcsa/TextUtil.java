package io.github.jayzhang.hcsa;

import java.util.ArrayList;
import java.util.List;



public class TextUtil {
	
	public static String REPLACE = "...";
	public static int MIN_CXT_LEN = 2;
	
	public static String removeMiddle(String text, int limit)
	{
		if(text.length() <= limit)
			return text;
		
		int remove = text.length() - limit;
		
		int start = limit/2;
		
		int end = start + remove;
		
		return text.substring(0, start) + REPLACE + text.substring(end);
	}
	
	
	public static String removeBegin(String text, int limit)
	{
		if(text.length() <= limit)
			return text;
		
		int remove = text.length() - limit;
		return REPLACE + text.substring(remove);
	}
	
	public static String removeEnd(String text, int limit)
	{
		if(text.length() <= limit)
			return text;
		return text.substring(0, limit) + REPLACE;
	}
	
	public static HighlightResult highlightText(List<Highlight> hls , String text, String highlightSTag, String highlightETag, int wordLimit)
	{
		HighlightResult result = new HighlightResult();
		if(text == null)
			return null;
		
		if(text.length() == 0)
			return result;
		
		if( hls == null || hls.size() == 0
				|| highlightSTag == null || highlightSTag.length() == 0
				|| highlightETag == null || highlightETag.length() == 0
				)
		{
			result.setHighlight(text);
			if(wordLimit > 0)
			{
				if(wordLimit < text.length())
					result.setSummaryHighlight(text.substring(0, wordLimit) + REPLACE);
				else 
					result.setSummaryHighlight(text);
			}
			else 
				result.setSummaryHighlight(text);
			return result;
		}
		
		int last = 0;
		
		int cxtlen = -1;
		
		if(wordLimit > 0)
		{
			int segCount = 0;
			int highlen = 0;
			for(Highlight hl : hls)
			{
				if(last <= hl.getOffset())
				{
					highlen += hl.getLength();
					last = hl.getOffset() + hl.getLength();
					++ segCount;
				}
			}
			cxtlen = (wordLimit - highlen) / segCount;
			if((wordLimit - highlen) % hls.size() != 0)
				cxtlen ++;
			
			if(cxtlen < MIN_CXT_LEN)
				cxtlen = MIN_CXT_LEN;
		}
		
//		System.out.println("cxtlen: " + cxtlen);
		
		last = 0;
		String highlight = "";
		String summaryHighlight = "";
		int sumlen = 0;
		for(Highlight hl : hls)
		{
			try
			{
				if(last <= hl.getOffset())
				{
					String context = text.substring(last, hl.getOffset());
					highlight += context
							+ highlightSTag 
							+ text.substring(hl.getOffset(),hl.getOffset() + hl.getLength()) 
							+ highlightETag;
					
					if(cxtlen > 0)
					{
						String contextSummary = removeMiddle(context, cxtlen);
						if(last == 0)
							contextSummary = removeBegin(context, cxtlen%2==0? cxtlen/2 : (cxtlen/2+1));
						summaryHighlight += contextSummary
								+ highlightSTag 
								+ text.substring(hl.getOffset(),hl.getOffset() + hl.getLength()) 
								+ highlightETag;	
						
						sumlen += contextSummary.length() + hl.getLength();
					}
					last = hl.getOffset() + hl.getLength();
				}
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		}
		
		highlight += text.substring(last);
		if(cxtlen > 0)
		{
			int remain = text.length() - last; 
			if(remain + sumlen <= wordLimit)
				summaryHighlight += text.substring(last);
			else 
				summaryHighlight += removeEnd(text.substring(last), cxtlen%2==0? cxtlen/2 : (cxtlen/2+1));
		}
		else 
		{
			summaryHighlight = highlight;
		}
		
		
		result.setHighlight(highlight);
		result.setSummaryHighlight(summaryHighlight);
		return result;
	}
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {

		String res = removeMiddle("ä½ æ˜¯ä¸ªå¤§å‚»ç“œäºŒç™¾äº”å??ä¸‰ç‚¹å¤§ç™½ç—´", 8);
		System.out.println(res);
		
		
		String text = "é¹¿å›žå¤´é…’åº—ä½?äºŽå¤§ä¸œæµ·çš„å°½å¤´ï¼Œæµ·æ™¯ä¸€èˆ¬ï¼Œé…’åº—ç§?äººæ²™æ»©å¾ˆå°?ï¼Œè€Œä¸”è¿˜åœ¨å»ºè®¾ä¸­ã€‚ç”±äºŽæ˜¯äººé€ æ²™æ»©ï¼Œæ‰€ä»¥é…’åº—ä¸?å»ºè®®æ¸¸å®¢åœ¨æµ·é‡Œæ¸¸æ³³ã€‚å› ä¸ºé…’åº—ä½?ç½®è¾ƒå??è€Œä¸”æ˜¯æ–°å»ºçš„ï¼Œæ‰€ä»¥è®¾æ–½å¾ˆæ–°ï¼Œå®¢äººä¸?å¤šï¼Œå¾ˆå®‰é?™ã€‚é…’åº—ç»¿åŒ–å¾ˆå¥½ï¼Œæ³³æ± ä¸?é”™ã€‚é…’åº—äº¤é€šä¹Ÿæ¯”è¾ƒæ–¹ä¾¿ï¼Œä¸Šä¸‹å?ˆæœ‰åˆ°å¸‚åŒºçš„ç?­è½¦ï¼Œé…’åº—å¤–é?¢ä¹Ÿæœ‰å…¬äº¤è½¦ï¼Œ3å…ƒå?³åˆ°å¸‚åŒºã€‚æ€»çš„æ?¥è¯´ï¼Œé…’åº—ä¸?é”™ï¼Œæ¯”é“¶æ³°ç­‰å¸‚å†…é…’åº—çŽ¯å¢ƒå¥½ï¼Œå–œæ¬¢å®‰é?™çš„æœ‹å?‹å?¯ä»¥è¯•è¯•ã€‚";
	
		System.out.println("length: " + text.length());
		
		List<Highlight> hls = new ArrayList<Highlight>();
		hls.add(new Highlight(76, 4, 0));
		hls.add(new Highlight(102, 9, 0));
//		hls.add(new Highlight(104, 7, 0));
//		hls.add(new Highlight(158, 3, 0));
		
		HighlightResult result = highlightText(hls, text, "<start>", "<end>",  10);
		System.out.println(result.getHighlight());
		System.out.println(result.getSummaryHighlight());
		
		System.out.println("åŠ¡æ€?åº¦æ¯”è¾ƒå¥½ï¼Œæˆ‘ä»¬å¼€ä¼šä»€ä¹ˆçš„ï¼Œæœ?åŠ¡éƒ½æ˜¯å¾®ç¬‘ç?€çš„ï¼Œä¸?æ˜¯è‹¦ç“œç?€è„¸ã€‚è£…ä¿®æŒºæ–°çš„ï¼Œä¹ŸæŒºå¥½çš„ã€‚åœ°ç?†ä½?ç½®è¿˜è¡Œå?§ï¼Œå‡‘å?ˆï¼Œäº¤é€šå¾ˆå¥½çš„ï¼ŒåŽ»ä¸ªå¸‚åŒºå“ªå„¿çš„éƒ½è¡Œã€‚æˆ¿é—´é‡Œçš„é…?å¥—è®¾æ–½è¿˜ç®—é½?å…¨å?§ï¼Œå°‘äº†ä¸ªå?¹é£Žæœºã€‚é¤?é¥®è¿˜å?¯ä»¥ï¼Œå‘³é?“è¿˜å?¯ä»¥ã€‚ä»·ä½?ä¸?äº†è§£ï¼Œæˆ‘æ²¡...".length());
	}

}
